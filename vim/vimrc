:set number relativenumber

:syntax on

" Backspace (in insert mode)

set backspace=indent,eol,start

" Sources (includes)

:so ~/.dotfiles/vim/plugins.vim
:so ~/.dotfiles/vim/functions.vim

" Window managemant

map <silent> <C-h> :call functions#WinMove('h')<CR>
map <silent> <C-j> :call functions#WinMove('j')<CR>
map <silent> <C-k> :call functions#WinMove('k')<CR>
map <silent> <C-l> :call functions#WinMove('l')<CR>

" Unmaping arrow keys
" Just for learning :)

map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" Tag jumping config

command! MakeTags !ctags -R .

" Custom Lightline

:so ~/.dotfiles/themes/base16.vim

set laststatus=2
if !has('gui_running')
    set t_Co=256
endif
set noshowmode
let g:lightline = {
\   'active': {
\       'left': [ [ 'mode', 'paste' ],
\               [ 'gitbranch' ],
\               [ 'readonly', 'filetype', 'filename' ]],
\       'right': [ [ 'percent' ], [ 'lineinfo' ],
\               [ 'fileformat', 'fileencoding' ],
\               [ 'linter_errors', 'linter_warnings' ]]
\   },
\   'component_expand': {
\       'linter': 'LightlineLinter',
\       'linter_warnings': 'LightlineLinterWarnings',
\       'linter_errors': 'LightlineLinterErrors',
\       'linter_ok': 'LightlineLinterOk'
\   },
\   'component_type': {
\       'readonly': 'error',
\       'linter_warnings': 'warning',
\       'linter_errors': 'error'
\   },
\   'component_function': {
\       'fileencoding': 'LightlineFileEncoding',
\       'filename': 'LightlineFileName',
\       'fileformat': 'LightlineFileFormat',
\       'filetype': 'LightlineFileType',
\       'gitbranch': 'LightlineGitBranch'
\   },
\   'tabline': {
\       'left': [ [ 'tabs' ] ],
\       'right': [ [ 'close' ] ]
\   },
\   'tab': {
\       'active': [ 'filename', 'modified' ],
\       'inactive': [ 'filename', 'modified' ],
\   },
\   'separator': { 'left': "\uE0B0", 'right': "\uE0B2" },
\   'subseparator': { 'left': "▒", 'right': "░" }
\ }
